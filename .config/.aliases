#!/bin/env bash

# Brevity
alias ai='aichat'
alias df='df -h'
alias downl='aria2c -c -x 8 -s 8'
alias du='du -ch'
alias ff='fastfetch'
alias h='history'
alias hs='history | rg'
alias k15="killall -15"
alias k9="killall -9"
alias lg='ls -alF | rg -i'
alias lh='ls -alF --color=auto --group-directories-first'
alias ll='ls -l --color=auto --group-directories-first'
alias ls='ls -hN --color=auto --group-directories-first'
alias mkdir='mkdir -v'
alias mv="mv -iv"
alias open="xdg-open"
alias pac_cache_size='du -sh /var/cache/pacman/pkg/'
alias qrgen=' qrencode -t ANSI'
alias rm="rm -v"
alias rss="newsboat"
alias tf="terraform"
alias wget=wget --hsts-file="$XDG_DATA_HOME/wget-hsts" # Inorder to avoid history file in $HOME
alias xcp='xclip -selection clipboard'
alias zzz='sudo systemctl suspend'

# systemctl aliases
alias sc-disable="sudo systemctl disable"
alias sc-enable="sudo systemctl enable"
alias sc-status="systemctl status"
alias sc-start="sudo systemctl start"
alias sc-restart="sudo systemctl restart"
alias sc-stop="sudo systemctl stop"

# Enforce alias expansion.
# 	A trailing space in VALUE causes the next word to be checked for alias 
# 	substitution when the alias is expanded
alias sudo='sudo ' 
alias watch='watch '

# Program alternatives
alias ls="eza"
alias cat="bat"
alias vim="nvim"

# Git
alias cdr='cd $(git rev-parse --show-toplevel)' # jumps to the root path of a git repository
alias gb='git branch'
alias gca='git commit --amend'
alias gsu='git stash -u'
alias gsp='git stash pop'
alias gco='git checkout'
alias grh='git reset --hard'
alias gst='git status -sb'
alias gu='git reset HEAD' # unstage a file
alias gs='git switch'
alias gfp='git fetch --prune'
alias gap='git add -p'
alias gd='git diff'
alias gds='git diff --staged'

# Edit commonly updated configs
alias aliases='vim ~/.config/.aliases'
alias bspconf='vim ~/.config/bspwm/bspwmrc'
alias polyconf='vim ~/.config/polybar/config.ini'
alias zshrc="vim ~/.config/zsh/.zshrc"

# Bare Git Repository Controller for dotfiles
alias dotfile='/usr/bin/git --git-dir=$HOME/.dotfilesGitBareRepo --work-tree=$HOME'

# Time in different places
alias cali='TZ=":America/Los_Angeles" date "+%I:%M%P %d %b"'
alias israel='TZ=":Asia/Jerusalem" date "+%I:%M%P %d %b"'
alias sydney='TZ=":Australia/Sydney" date "+%I:%M%P %d %b"'

# Video downloaders
alias yt="yt-dlp --add-metadata -f 'bestvideo[ext=mp4]'"
alias yta="yt-dlp --downloader aria2c"

# Use DNS to get the public IP
alias publicip='dig +short myip.opendns.com @resolver1.opendns.com -4'

# speedtest: get a 100MB file via wget
alias speedtest="wget -O /dev/null http://speedtest.wdc01.softlayer.com/downloads/test100.zip" 

# Weather Report
alias weather="curl https://wttr.in/kathmandu"

# URL encode and decode
alias urlencode='python -c "import sys, urllib.parse as ul; [sys.stdout.write(ul.quote_plus(l)) for l in sys.stdin]"'
alias urldecode='python -c "import sys, urllib.parse as ul; [sys.stdout.write(ul.unquote_plus(l)) for l in sys.stdin]"'

# Copy the img in the X clipboard to a file
alias cpimg='xclip -selection clipboard -t image/png -o'

# Sops easy encrypt/decrypt
alias sopse='sops --encrypt --age $(cat $SOPS_AGE_KEY_FILE | grep -oP "public key: \K(.*)")'
alias sopsd='sops --decrypt --age $(cat $SOPS_AGE_KEY_FILE | grep -oP "public key: \K(.*)")'

alias videoexif='exiftool -s -s -s -FileType -CompressorID -AudioFormat'


video_info () {
  echo "File Container: $(file -b --mime-type "$1")"
  echo "Video Codec: $(ffprobe -v quiet -select_streams v:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "$1")"
  echo "Video Bit Depth: $(ffprobe -v quiet -select_streams v:0 -show_entries stream=bits_per_raw_sample -of default=noprint_wrappers=1:nokey=1 "$1")"
  echo "Pixel Format: $(ffprobe -v quiet -select_streams v:0 -show_entries stream=pix_fmt -of default=noprint_wrappers=1:nokey=1 "$1")"
  echo "Audio Codec: $(ffprobe -v quiet -select_streams a:0 -show_entries stream=codec_name -of default=noprint_wrappers=1:nokey=1 "$1")"
  echo "FPS: $(ffprobe -v quiet -select_streams v:0 -show_entries stream=r_frame_rate -of default=noprint_wrappers=1:nokey=1 "$1" | awk -F'/' '{printf "%.2f", $1 / $2}')"
  echo "Resolution: $(ffprobe -v quiet -select_streams v:0 -show_entries stream=width,height -of csv=s=x:p=0 "$1")"
}

# Define directory shortcuts with hash -d so you can use 
# cd ~x and vim ~x/file instead of cd /very/long/and/often/accessed/path. 
# hash -d P=$HOME/Projects

pyserver() { python -m http.server $1 --bind 0.0.0.0 }
clean_docker_img() { docker rmi $(docker images -f "dangling=true" -q) }
clean_docker_container() { docker container rm -f $(docker container ls -a -q) }
unique() { awk '!seen[$0]++' }
topcmds() { history | awk '{print $2}' | sort | uniq -c | sort -bgr | head -n 25 }

## Fmpeg Script to add album cover to all files in the current directory
add_album_art() {
	for f in ./*.mp3; do
		ffmpeg -i "$f" -i cover.jpg -map_metadata 0 -map 0 -map 1 -acodec copy out-"${f#./}" \
		&& /usr/bin/mv out-"${f#./}" "$f";
	done
}

# portpid lists all the processes running on the given port
portpid() {
	sudo lsof -n -i :$1 | grep -i 'Listen'
}

yttrim() {
	yt-dlp "$2" --download-sections "*$1" -S 'proto:https' -o "video_clip_${1// /_}.%(ext)s"
}

function trim_mp4() {
    if [[ $# -ne 3 ]]; then
        echo "Usage: trim_mp4 <input_file> <start_time> <end_time>"
        echo "Times should be in the format HH:MM:SS or in seconds"
        return 1
    fi

    local input_file=$1
    local start_time=$2
    local end_time=$3
    local output_file="${input_file%.*}_trimmed.mp4"

    ffmpeg -i "$input_file" -ss "$start_time" -to "$end_time" -c copy "$output_file"

    if [[ $? -eq 0 ]]; then
        echo "Trimmed video saved as $output_file"
    else
        echo "An error occurred while trimming the video"
    fi
}
